[project]
name = "hw-project-01"
version = "0.1.2"
description = ""
authors = [
    {name = "v.zajczev",email = "v.zajczev@globus.ru"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "requests (>=2.32.4,<3.0.0)"
]

[tool.poetry]
packages = [{include = "hw_project_01", from = "src"}]


[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
ruff = "^0.12.0"

[tool.black]
line-length = 40

[tool.ruff]
# https://docs.astral.sh/ruff/settings
extend-exclude = ["__init__.py"]
line-length = 120
lint.pydocstyle.convention = "google"
lint.select = [
    "N",    # pep8-naming
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "E",    # pycodestyle.error
    "W",    # pycodestyle.warning
    "F",    # pyflakes
    "S",    # flake8-bandit
    "D",    # pydocstyle
    "I",    # isort
    "C90",  # maccabe
    "C4",   # flake8-comprehensions
    "COM",  # flake8-commas
    "DTZ",  # flake8-datetimez
    "ERA",  # flake8-eradicate
    "SLOT", # flake8-slots
]
lint.ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in `__init__`
    "S101",   # Use of `assert` detected
    "S311",   # Standard pseudo-random generators are not suitable for cryptographic purposes
    "ERA001", # Remove commented-out code
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
